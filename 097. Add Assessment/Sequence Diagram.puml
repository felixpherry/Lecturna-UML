@startuml AddAssessment
actor Instructor
participant LoginPageView [
  <<view>>
  :LoginPage
]

participant DashboardView [
  <<view>>
  :Dashboard
]

participant AssessmentPageView [
  <<view>>
  :ClassAssessmentPage
]

participant AssessmentModalView [
  <<view>>
  :AssessmentModal
]

participant AssessmentController [
  <<controller>>
  :AssessmentController
]

activate Instructor
activate LoginPageView
Instructor -> LoginPageView: Login as Instructor
activate DashboardView
LoginPageView -> DashboardView: Redirect to Dashboard Page
deactivate LoginPageView

DashboardView -->> Instructor: Show Dashboard Page

Instructor -> DashboardView: Visit Class Assessment Page
activate AssessmentPageView
DashboardView -> AssessmentPageView: Redirect to Class Assessment Page
deactivate DashboardView

AssessmentPageView -->> Instructor: Show Class Assessment Page

Instructor -> AssessmentPageView: Click "Add" Button
activate AssessmentModalView
AssessmentPageView -> AssessmentModalView: Open Assessment Form Modal
deactivate AssessmentPageView

AssessmentModalView -->> Instructor: Show Assessment Form Modal

Instructor -> AssessmentModalView: Input Assessment
Instructor -> AssessmentModalView: Click Save Button

activate AssessmentController
AssessmentModalView -> AssessmentController: saveAssessment()

alt invalid
  AssessmentController -->> AssessmentModalView: Return Error Message
  AssessmentModalView -->> Instructor: showErrorPopup()
else valid
  AssessmentController -->> AssessmentModalView: Return Success Message
  AssessmentModalView -->> Instructor: showSuccessPopup()
end
deactivate AssessmentModalView

deactivate Instructor
deactivate AssessmentModalView
deactivate AssessmentController
@enduml
